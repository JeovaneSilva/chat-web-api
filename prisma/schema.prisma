datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             Int            @id @default(autoincrement())
  name           String         @unique
  email          String         @unique
  password       String
  profilePicture String?        // Adicionado para armazenar a foto de perfil
  isOnline       Boolean        @default(false)
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  conversations1 Conversation[] @relation("User1Conversations")
  conversations2 Conversation[] @relation("User2Conversations")
  messages       Message[]      @relation("UserMessages")
  status         UserStatus?
  sentInvites    Invite[]       @relation("UserSentInvites")
  receivedInvites Invite[]      @relation("UserReceivedInvites")
}

model Conversation {
  id        Int       @id @default(autoincrement())
  user1     User      @relation("User1Conversations", fields: [user1Id], references: [id])
  user1Id   Int
  user2     User      @relation("User2Conversations", fields: [user2Id], references: [id])
  user2Id   Int
  messages  Message[] @relation("ConversationMessages")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Message {
  id             Int          @id @default(autoincrement())
  content        String
  sender         User         @relation("UserMessages", fields: [senderId], references: [id])
  senderId       Int
  conversation   Conversation @relation("ConversationMessages", fields: [conversationId], references: [id])
  conversationId Int
  createdAt      DateTime     @default(now())
}

model UserStatus {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
  isOnline  Boolean  @default(false)
  lastSeen  DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Invite {
  id           Int       @id @default(autoincrement())
  sender       User      @relation("UserSentInvites", fields: [senderId], references: [id])
  senderId     Int
  receiver     User      @relation("UserReceivedInvites", fields: [receiverId], references: [id])
  receiverId   Int
  status       InviteStatus  @default(PENDING)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

enum InviteStatus {
  PENDING
  ACCEPTED
  DECLINED
}